/*
 * File: app/controller/ItemList.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Feed.controller.NetOrderController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.NetOrderController',

    config: {
        models: [
            'NetOrderModel'
        ],
        stores: [
            'NetOrderStore'
        ],
        views: [
            'NetOrderList'
        ],

        refs: {
            //postsNav: '#postsNav',
            //itemList: '#itemList'
        },

        control: {
            //"itemList": {
            //    activate: 'onItemsListActivate',
            //    itemtap: 'onItemsListItemTap'
            //}
        }
    },

    //onItemsListActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
    //    this.getApplication().fireEvent('updateNav');
    //},
    //
    //onItemsListItemTap: function(dataview, index, target, record, e, eOpts) {
    //    var story = Ext.create('widget.postsstory',{
    //        title: record.get('title')
    //    });
    //    story.setData(record.data);
    //    this.getPostsNav().push(story);
    //},

    launch: function() {
        this.loadItemsOnFeedLoad();
        Ext.getStore('NetOrderStoreId').loadList();
    },

    loadItemsOnFeedLoad: function() {
        var self = this;
        Ext.getStore('NetOrderStoreId').on('load', function(store, records) {
            //var feed = records[0],
            //    posts, title, feedsStore;
            //
            //if (feed) {
            //    posts = feed.posts().getData().items;
            //    title = feed.get('title');
            //    feedsStore = Ext.getStore('Feeds');
            //
            //    Ext.getStore('Posts').setData(posts);
            //
            //    self.getItemList().title = title;
            //
            //    if (feedsStore.find('url', feed.get('url')) < 0){
            //        feedsStore.add(feed);
            //    }
            //} else {
            //    Ext.Msg.alert('Error', 'Could not load feed. Check that the URL is a valid feed.');
            //}
        });

    },

    onUpdateNav: function() {
        var self = this;
        // ugly hack, so that this happens after title is internally set by back state stack
        //Ext.defer(function(){
        //    var title = self.getItemList().title;
        //    self.getPostsNav().getNavigationBar().setTitle(title);
        //},500);
    },

    init: function(application) {
        application.on([
        { event: 'updateNav', fn: this.onUpdateNav, scope: this }
        ]);
    }

});