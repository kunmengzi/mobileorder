/*
 * File: app/controller/ItemList.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Feed.controller.AddFormController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.AddFormController',

    config: {
        models: [
            'Item'
        ],
        stores: [
            'AddFormStore'
        ],
        views: [
            'AddFormView'
        ],

        refs: {
            materialTypeSelect:"#materialTypeSelectId",
            materialSelect:"#materialSelectId",
            measureUnitSelect:"#measureUnitSelectId",
            priceField:'#priceFieldId',
            clearBtn:'#clearBtnId',
            addCarBtn:'#addCarBtnId',
            addFormPanel:'#AddFormViewId'
        },

        control: {
            'materialTypeSelect':{
                change:'materialTypeChange'
            },
            'materialSelect':{
                change:'materialChange'
            },
            'measureUnitSelect':{
                change:'measureUnitChange'
            },
            'clearBtn':{
                tap:'clearAction'
            }
        }
    },

    clearAction:function(comp, e, eOpts){
        this.getAddFormPanel().reset();
    },

    measureUnitChange:function(comp,newVal,oldVal,opts){
        console.log('measureUnit change ..........')
    },

    materialChange:function(comp,newVal,oldVal,opts){
        Ext.getStore("MeasureUnitStoreId").loadMeasureUnit(newVal);
        //comp.getRecord().getData().code;
        this.getPriceField().setValue(comp.getRecord().getData().id);
    },

    materialTypeChange:function(comp,newVal,oldVal,opts){
        Ext.getStore("MaterialStoreId").loadMaterials(newVal);
    },

    onItemsListActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        this.getApplication().fireEvent('updateNav');
    },

    launch: function() {
        Ext.getStore("MaterialTypesStoreId").load();
    },

    onUpdateNav: function() {
        var self = this;
    },

    init: function(application) {
        application.on([
        { event: 'updateNav', fn: this.onUpdateNav, scope: this }
        ]);
    }
});